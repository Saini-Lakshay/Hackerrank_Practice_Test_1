#include <math.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <assert.h>
#include <limits.h>
#include <stdbool.h>

struct ListNode {
	int val;
	struct ListNode *next;
};

typedef struct ListNode listnode;

listnode* listnode_new(int val) {
	listnode* node = (listnode *) malloc(sizeof(listnode));
	node->val = val;
	node->next = NULL;
	return node;
}

void addNode(listnode* A, int i){
	listnode* temp = listnode_new(i);
	listnode* t = A;
	while(t->next != NULL){
		t = t->next;
	}
	t->next = temp;
}

int isPalin(listnode* A)
{
    listnode *p1=A;
    listnode *p2=A;
    listnode *prev=A;
    listnode *curr=prev->next;
    int c=0,i=0;
    
    while(p2)
    {
        c++;
        p2=p2->next;
    }
    
    p2=A;
    i=0;
    
    while(i<((c-1)/2))
    {
        i++;
        p2=p2->next;
    }
    
    if(c==1)
    {
        return 1;
    }
    
    i=0;
    prev=p2->next;
    curr=prev->next;
    
    while(curr)
    {
        prev->next=curr->next;
        curr->next=p2->next;
        p2->next=curr;
        curr=prev->next;
    }
    
    p2=p2->next;
    
    while(p2)
    {
        if(p1->val != p2->val)
        {
            return 0;
        }
        p2=p2->next;
        p1=p1->next;
    }
    
    return 1;
}
int main(){